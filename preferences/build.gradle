/*
 * Copyright (C) 2014 Andrew Reitz
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * Limitations under the License.
 */

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'org.robolectric:robolectric-gradle-plugin:+'
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
    classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:2.2.5'
    classpath "org._10ne.gradle:rest-gradle-plugin:0.3.1"
  }
}

apply plugin: 'com.android.library'
apply plugin: 'robolectric'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: "org.10ne.rest"
apply plugin: 'artifactory-publish'

repositories {
  jcenter()
}

android {
  compileSdkVersion COMPILE_SDK_VERSION
  buildToolsVersion BUILD_TOOLS_VERSION

  defaultConfig {
    minSdkVersion MIN_SDK_VERSION
    targetSdkVersion TARGET_SDK_VERSION

    versionCode VERSION_CODE
    versionName VERSION
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_6
    targetCompatibility JavaVersion.VERSION_1_6
  }

  sourceSets {
    androidTest {
      setRoot('src/test')
    }
  }
}

dependencies {
  androidTestCompile 'junit:junit:4.11'
  androidTestCompile('org.robolectric:robolectric:2.3') {
    exclude module: 'commons-logging'
    exclude module: 'httpclient'
  }
  androidTestCompile 'com.squareup:fest-android:1.0.+'
}

robolectric {
  include '**/*Test.class'
}

task androidJavadocs(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
  from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
}

publishing {
  publications {
    dist(MavenPublication) {
      groupId GROUP
      artifactId 'android-preferences'
      version VERSION
      artifact "build/outputs/aar/preferences-${VERSION}.aar"
      artifact androidJavadocsJar {
        classifier 'source'
      }
      artifact androidSourcesJar {
        classifier 'javadoc'
      }
      pom.withXml {
        Node root = asNode()
        root.appendNode('name', 'android-preferences')
        root.appendNode('description', 'An easier way to use and consolidate preference in your Android project.')
        root.appendNode('url', 'https://github.com/InkApplications/android-preferences')

        def issues = root.appendNode('issueManagement')
        issues.appendNode('system', 'github')
        issues.appendNode('url', 'https://github.com/InkApplications/android-preferences/issues')

        def scm = root.appendNode('scm')
        scm.appendNode('url', 'scm:https://github.com/InkApplications/android-preferences')
        scm.appendNode('connection', 'scm:git@github.com:InkApplications/android-preferences.git')
        scm.appendNode('developerConnection', 'scm:git@github.com:InkApplications/android-preferences.git')

        def license = root.appendNode('licenses').appendNode('license')
        license.appendNode('name', 'The Apache Software License, Version 2.0')
        license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
        license.appendNode('distribution', 'repo')

        def dev = root.appendNode('developers').appendNode('developer')
        dev.appendNode('id', 'areitz')
        dev.appendNode('name', 'Andrew Reitz')
        dev.appendNode('url', "http://andrewreitz.com")
      }
    }
  }
}

bintray {
  user = BINTRAY_USER
  key = BINTRAY_APIKEY

  publications = ['dist']

  dryRun = false
  publish = true
  pkg {
    repo = 'android'
    name = 'android-preferences'
    userOrg = 'inkapplications'
    desc = 'An easier way to use and consolidate preference in your Android project.'
    websiteUrl = 'https://github.com/InkApplications/android-preferences'
    issueTrackerUrl = 'https://github.com/InkApplications/android-preferences/issues'
    vcsUrl = 'https://github.com/InkApplications/android-preferences.git'
    licenses = ['Apache-2.0']
    labels = ['Android', 'SharedPreferences']
    publicDownloadNumbers = true
  }
}

task bintraySign(type: org._10ne.gradle.rest.RestTask) {
  httpMethod = 'post'
  uri = "https://api.bintray.com/gpg/inkapplications/android/android-preferences/versions/${VERSION}"
  username = BINTRAY_USER
  password = BINTRAY_APIKEY
  requestBody = [passphrase: SIGNING_PASSWORD]
  contentType = groovyx.net.http.ContentType.JSON
}

artifactory {
  contextUrl = 'http://oss.jfrog.org/artifactory'
  publish {
    contextUrl = 'http://oss.jfrog.org/artifactory'
    repository {
      repoKey = 'oss-snapshot-local'
      username = BINTRAY_USER
      password = BINTRAY_APIKEY
    }
    defaults {
      publications('dist')
    }
  }
  resolve {
    contextUrl = 'http://oss.jfrog.org/artifactory'
    repository {
      repoKey = 'libs-release'
    }
  }
}